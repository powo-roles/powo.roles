- name: firewalld StrictForwardPorts=yes
  ansible.builtin.ini_file:
    path: /etc/firewalld/firewalld.conf
    option: StrictForwardPorts
    value: "yes"
    modify_inactive_option: false
    no_extra_spaces: true
  become: true
  become_user: root
  when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 42
  notify:
    - firewalld.restart

- meta: flush_handlers

- name: firewalld service
  service:
    name: firewalld
    enabled: true
    state: started
  become: true
  become_user: root

- name: fix FedoraWorkstation port config
  firewalld:
    zone: FedoraWorkstation
    permanent: true
    immediate: true
    port: "{{ item }}"
    state: disabled
  loop:
  - 1025-65535/udp
  - 1025-65535/tcp
  become: true
  become_user: root

- name: fix FedoraWorkstation service config
  firewalld:
    zone: FedoraWorkstation
    permanent: true
    immediate: true
    service: "{{ item }}"
    state: disabled
  loop:
  - samba-client
  become: true
  become_user: root

- name: FedoraWorkstation port config
  firewalld:
    zone: FedoraWorkstation
    permanent: true
    immediate: true
    port: "{{ item }}"
    state: enabled
  loop:
  # nomachine
  - 4000/tcp
  become: true
  become_user: root

- name: FedoraWorkstation service config
  firewalld:
    zone: FedoraWorkstation
    permanent: true
    immediate: true
    service: "{{ item }}"
    state: enabled
  loop:
  - ssh
  - dhcpv6-client
  - mdns
  become: true
  become_user: root

# create wireguard zone
- name: wireguard zone
  firewalld:
    zone: wireguard
    permanent: true
    state: present
  notify: firewalld.reload
  become: true
  become_user: root

# create wireguard zone
- name: wireguard interface (wildcard)
  firewalld:
    zone: wireguard
    permanent: true
    state: enabled
    interface: wg0_+
  notify: firewalld.reload
  become: true
  become_user: root

- meta: flush_handlers

- name: wireguard ports
  firewalld:
    zone: wireguard
    permanent: true
    immediate: true
    state: enabled
    port: "{{ item }}"
  loop:
  - 4000/tcp
  become: true
  become_user: root

- name: wireguard services
  firewalld:
    zone: wireguard
    permanent: true
    immediate: true
    state: enabled
    service: "{{ item }}"
  loop:
  - ssh
  become: true
  become_user: root

# Command to add temporarily public access :
# sudo firewall-cmd --zone wireguard --add-port 8080/tcp --timeout 1h
# Remove access with :
# sudo firewall-cmd --zone wireguard --remove-port 8080/tcp